"""
Тестовый скрипт для демонстрации иерархического чанкинга в SmartChanker
"""

from smart_chanker import SmartChanker
import json


def test_smart_chanker_hierarchical():
    """Тестирует иерархический чанкинг в SmartChanker"""
    
    # Тестовый текст с многоуровневой нумерацией
    test_text = """
1. ОБЩИЕ ПОЛОЖЕНИЯ И ОРГАНИЗАЦИЯ
1.1. ВВЕДЕНИЕ И ОБОСНОВАНИЕ ПРОЕКТА
1.1.1. Актуальность и необходимость проекта
Строительство совмещенного железнодорожно-автомобильного мостового перехода через реку Лена на участке Транссибирской магистрали федерального значения является крупнейшим инфраструктурным проектом, имеющим стратегическое значение для развития Дальнего Востока, Сибири и экономики Российской Федерации в целом.

1.1.2. Транспортно-логистические проблемы региона
В настоящее время переправа через реку Лена является узким местом Транссибирской магистрали и федеральной автомобильной трассы. Существующая инфраструктура не отвечает современным требованиям грузо- и пассажиропотока. Основные проблемы заключаются в следующем:
• Сезонная зависимость: В период ледостава и ледохода действующая паромная переправа полностью прекращает работу, что приводит к транспортному коллапсу.
• Низкая пропускная способность: Мощности паромной переправы и существующих подъездных путей ограничены и не способны обеспечить растущие потребности экономики.
• Логистические издержки и риски: Необходимость использования паромов, зависимость от погодных условий и ледовой обстановки приводят к значительным задержкам.

1.1.3. Экономическое обоснование
Строительство моста через реку Лена обладает высокой экономической эффективностью и окупаемостью на макроэкономическом уровне. Расчеты показывают, что реализация проекта приведет к следующим положительным эффектам:
1) Снижение логистических издержек: Ликвидация паромной переправы и переход на круглогодичное бесперебойное движение позволят сократить затраты на перевозку грузов и пассажиров на 25-30%.
2) Стимулирование региональной экономики: Мост откроет доступ к разработке новых месторождений полезных ископаемых.
3) Развитие транзитного потенциала: Усиление пропускной способности Транссиба повысит его конкурентоспособность.

1.2. ЦЕЛИ И ЗАДАЧИ ПРОЕКТА
1.2.1. Стратегические цели
• Ликвидация ключевого инфраструктурного ограничения на Транссибирской магистрали и федеральной автомобильной трассе.
• Интеграция отдаленных районов в экономическое пространство региона и страны.
• Стимулирование долгосрочного социально-экономического развития Дальнего Востока и Сибири.

1.2.2. Тактические задачи
• Спроектировать и построить современный, надежный и безопасный совмещенный железнодорожно-автомобильный мостовой переход через реку Лена.
• Обеспечить синхронное развитие примыкающих участков автомобильных и железных дорог для исключения образования новых «узких мест».
• Организовать эффективную систему управления проектом, обеспечивающую соблюдение сроков, бюджета и качества работ.

2. ОСНОВНЫЕ ХАРАКТЕРИСТИКИ ПРОЕКТА
2.1. Технические параметры моста
• Тип сооружения: Совмещенный железнодорожно-автомобильный мост балочно-арочной или вантовой системы.
• Протяженность: Ориентировочно 2.5 – 3.5 км (с учетом подходов и эстакад).
• Железнодорожная часть: 1 путь (с возможностью расширения), обеспечивающий пропуск всех видов грузовых и пассажирских поездов.

2.2. Сроки реализации
• Подготовительный этап (проектирование, экспертиза, подготовка территории): 12 месяцев.
• Основной этап строительства: 48 месяцев.
• Пусконаладочные работы и ввод в эксплуатацию: 3 месяца.
• Общий срок реализации проекта: 63 месяца.
"""
    
    # Создаем SmartChanker
    chunker = SmartChanker()
    
    print("=== Иерархический чанкинг в SmartChanker ===\n")
    
    # Полная обработка с иерархическим чанкингом
    result = chunker.process_with_hierarchical_chunking(
        test_text, 
        target_level=3, 
        max_chunk_size=500
    )
    
    print(f"Всего разделов: {result['metadata']['total_sections']}")
    print(f"Всего чанков: {result['metadata']['total_chunks']}")
    print(f"Целевой уровень: {result['metadata']['target_level']}")
    print()
    
    # Показываем структуру разделов
    print("Структура разделов:")
    for section in result['sections']:
        indent = "  " * (section['level'] - 1)
        print(f"{indent}{section['number']} - {section['title']}")
        if section['chunks']:
            print(f"{indent}  Чанки: {len(section['chunks'])}")
    print()
    
    # Показываем информацию о чанках
    print("Информация о чанках:")
    for i, chunk in enumerate(result['chunks']):
        metadata = chunk['metadata']
        print(f"  Чанк {i+1}:")
        print(f"    ID: {metadata['chunk_id']}")
        print(f"    Номер в разделе: {metadata['chunk_number']}")
        print(f"    Путь: {' > '.join(metadata['section_path'])}")
        print(f"    Размер: {metadata['char_count']} символов")
        print(f"    Содержит списки: {metadata['contains_lists']}")
        print(f"    Полный раздел: {metadata['is_complete_section']}")
        print(f"    Контент: {chunk['content'][:100]}...")
        print()
    
    # Сохраняем результат
    with open("smart_chanker_hierarchical_result.json", 'w', encoding='utf-8') as f:
        json.dump(result, f, ensure_ascii=False, indent=2, default=str)
    
    print("Результат сохранен в файл: smart_chanker_hierarchical_result.json")


if __name__ == "__main__":
    test_smart_chanker_hierarchical()
